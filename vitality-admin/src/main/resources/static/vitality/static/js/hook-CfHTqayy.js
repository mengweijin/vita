var u=(c,r,t)=>new Promise((d,a)=>{var n=e=>{try{o(t.next(e))}catch(s){a(s)}},i=e=>{try{o(t.throw(e))}catch(s){a(s)}},o=e=>e.done?d(e.value):Promise.resolve(e.value).then(n,i);o((t=t.apply(c,r)).next())});import{d as l}from"./user-Bevwic4T.js";import{e as m,r as f,o as p}from"./index-DcU5f0E9.js";function D(c){const r=m({}),t=f([]),d=f(!0);function a(e){l(e.id).then(()=>{n()})}function n(){return u(this,null,function*(){})}const i=e=>{e&&(e.resetFields(),r.deptId="",c.value.onTreeReset(),n())};function o({id:e,selected:s}){r.deptId=s?e:"",n()}return p(()=>u(this,null,function*(){})),{form:r,treeData:t,treeLoading:d,onSearch:n,onTreeSelect:o,resetForm:i,handleDelete:a}}export{D as useCache};
