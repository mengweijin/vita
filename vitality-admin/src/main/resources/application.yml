application:
  name: Vitality-Admin
  version: @version@
  formatted-version: (v@version@)
  author: Meng Wei Jin
  email: mwjwork@qq.com
  home: https://aday.fun
  github: https://github.com/mengweijin
  gitee: https://gitee.com/mengweijin
server:
  port: 8080
  servlet:
    context-path:
  compression:
    enabled: true
logging:
  # 根据环境动态加载：classpath:logback-spring-${spring.profiles.active}.xml
  config: classpath:logback-spring.xml
spring:
  application:
    name: @project.artifactId@
  profiles:
    active: @profiles.active@
  banner:
    location: classpath:banner.txt
  mvc:
    throw-exception-if-no-handler-found: false
  web:
    resources:
      # 对于Restful风格的应用应该设置为false; 对于传统的应用（如: 使用thymeleaf），应该设置为 true, 否则浏览器访问不到静态资源文件
      add-mappings: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 10GB
      max-request-size: 10GB
  main:
    # 是否允许循环依赖（Spring Cloud Alibaba Sentinel 中就有循环依赖）
    allow-circular-references: false
  jackson:
    # 默认就是UTC时区
    #time-zone: UTC
    # 加上这个配置，从前台接收LocalDateTime类型可直接使用@DateTimeFormat注解
    #date-format: yyyy-MM-dd HH:mm:ss
    # 序列化所有实体类的字段，包括值为null的
    default-property-inclusion: ALWAYS
  # CacheProperties.java
  cache:
    type: JCACHE
    jcache:
      config: classpath:ehcache.xml
  task:
    # @Async Spring异步任务
    execution:
      pool:
        # default 8  TaskExecutionProperties
        core-size: 8
    # @Scheduled Spring调度任务
    scheduling:
      pool:
        # default 1  TaskSchedulingProperties
        size: 8
  liquibase:
    # 启用liquibase
    enabled: true
    # 存储变化的文件（changelog）位置。默认：classpath:/db/changelog/db.changelog-master.xml
    change-log: classpath:/db/db.changelog-master.xml
    # 分环境执行，若在 changelog 文件中设置了对应 context 属性，则只会执行与 dev 对应值的 changeset
    # contexts: test
    # 执行前首先删除数据库，默认 false。若设置为 true，则执行变更前，会先删除目标数据库，请谨慎
    # dropFirst: false
    # 执行更新时将回滚 SQL 写入的文件路径
    # rollback-file:
    # 如果使用工程已配置的 datasource 数据源，则以下三个数据库连接参数可不配置
    # 访问数据库的连接地址
    # url:
    # 访问数据库的用户名
    # user:
    # 访问数据库的密码
    # password:
mybatis-plus:
  # MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行该配置，告诉 Mapper 所对应的 XML 文件位置。
  mapper-locations: classpath*:/mapper/**/*.xml
  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查
  check-config-location: false
  global-config:
    # 打印mybatis-plus的logo
    banner: false
    db-config:
      # 全局逻辑删除字段名
      logic-delete-field: deleted
      # 逻辑已删除值
      logic-delete-value: Y
      # 逻辑未删除值
      logic-not-delete-value: N
  configuration:
    # MyBatis 在使用 resultMap 来映射查询结果中的列，如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段，
    # 这就导致在调用到该字段的时候由于没有映射，取不到而报空指针异常。
    call-setters-on-nulls: true
    # 对JavaBean中属性开启自动驼峰命名规则（camel case）映射，默认对返回类型为Map的对象的key不起作用，所以需要使用自定义MybatisMapWrapperFactory类来处理
    map-underscore-to-camel-case: true
############## Sa-Token 配置 (文档: https://sa-token.cc) 可以零配置启动项目 ##############
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # 框架将会把 Bearer 视为token的一部分，无法正常读取 token 信息，导致鉴权失败。加上 token-prefix 即可解决。
  # 1. Token前缀 与 Token值 之间必须有一个空格。
  # 2. 一旦配置了 Token前缀，则前端提交 Token 时，必须带有前缀，否则会导致框架无法读取 Token。
  # 3. 由于Cookie中无法存储空格字符，也就意味配置 Token 前缀后，Cookie 鉴权方式将会失效，此时只能将 Token 提交到header里进行传输。
  token-prefix: Bearer
  # token 风格。可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: random-128
  # token有效期，单位s 默认30天, -1代表永不过期。这里设置为 86400秒（即：1天）
  timeout: 86400
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒, -1代表永不过期
  active-timeout: 1800
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # 是否输出操作日志
  is-log: false
  # 是否打印控制台 banner
  is-print: off

# Spring Boot的 actuator（健康监控）功能，访问：http://localhost:8080/actuator
# management.server: ManagementServerProperties.java
# management.endpoints.web: WebEndpointProperties.java  默认：http://localhost:8080/actuator/health
# management.endpoint.health: HealthEndpointProperties.java

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.github.mengweijin
# knife4j的增强配置。http://localhost:8080/doc.html
knife4j:
  enable: true
  setting:
    language: zh_cn
    swagger-model-name: 模型列表
    enable-footer: false
  production: false
decorator:
  datasource:
    enabled: false
vitality:
  debug: false
