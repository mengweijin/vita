apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-quickboot-mybatis-plus
  labels:
    app: sample-quickboot-mybatis-plus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-quickboot-mybatis-plus
  template:
    metadata:
      labels:
        app: sample-quickboot-mybatis-plus
    spec:
      containers:
      - name: sample-quickboot-mybatis-plus
        image: registry.cn-hangzhou.aliyuncs.com/mengweijin/sample-quickboot-mybatis-plus:0.0.1-SNAPSHOT
        # IfNotPresent, Always, Never
        imagePullPolicy: IfNotPresent
        args: ['--server.ssl.enabled=true', '--server.ssl.client-auth=none']
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: sample-quickboot-mybatis-plus
spec:
  # type: NodePort
  selector:
    app: sample-quickboot-mybatis-plus
  ports:
      # 默认情况下，为了方便起见，`targetPort` 被设置为与 `port` 字段相同的值。
    - port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-quickboot-mybatis-plus
  annotations:
    # 指定了我们使用后端ingress controller的类别，如果后端有多个ingress controller的时候很重要
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    # 注意这里：必须指定后端服务为HTTPS服务。
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
#    nginx.ingress.kubernetes.io/auth-tls-secret: "default/backend-tls"
#    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "5"
#    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
#    nginx.ingress.kubernetes.io/proxy-ssl-secret: "default/backend-tls"
#    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
#    nginx.ingress.kubernetes.io/proxy-ssl-verify-depth: "5"
    # 502 Bad Gateway when connecting to upstream over TLS: upstream SSL certificate does not match "upstream_balancer" while SSL handshaking to upstream
    # ingress-nginx 版本 >= 0.31 的解决办法：https://github.com/kubernetes/ingress-nginx/issues/4928
    #nginx.ingress.kubernetes.io/configuration-snippet: |
    #  proxy_ssl_name "svc-s.default.svc.cluster.local";
    # Workaround for proxy_ssl_name on ingress-nginx <0.31 参考：https://github.com/infobloxopen/konk/pull/91
    # https://github.com/kubernetes/ingress-nginx/issues/4928#issuecomment-574331462
    # https://github.com/kubernetes/ingress-nginx/commit/f9e410458c6cb4c243f301bdb5ffeed31bcc3f96
    # Enable to only support ingress-nginx >=0.31:
    #nginx.ingress.kubernetes.io/proxy-ssl-name: "svc-s.default.svc.cluster.local"
    #nginx.ingress.kubernetes.io/proxy-ssl-name: "mengweijin.com"
    #nginx.ingress.kubernetes.io/proxy-ssl-name: "mercure.local"
    #nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    #nginx.ingress.kubernetes.io/upstream-vhost: "mengweijin.com"
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: mengweijin.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sample-quickboot-mybatis-plus
                port:
                  number: 8080
#  tls:
#    - hosts:
#        - mengweijin.com
# keytool -export -alias clientAlias -keystore client.jks -rfc -file client.crt
# kubectl create secret generic client-secret --from-file=ca.crt=./client.crt

#kubectl create secret generic client-p12 --from-file=client.p12=./client.p12

# kubectl create secret tls backend-tls --cert=client.crt --key=client.key

#

