apiVersion: v1
kind: Namespace
metadata:
  name: ns1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: ns1
  labels:
    app: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
        - name: app1
          image: registry.cn-hangzhou.aliyuncs.com/mengweijin/sample-quickboot-mybatis-plus:0.0.1.2-SNAPSHOT
          # IfNotPresent, Always, Never
          imagePullPolicy: IfNotPresent
          args: ['-Xmx100m', '--server.ssl.enabled=false']
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: app1
  namespace: ns1
spec:
  # type: NodePort
  selector:
    app: app1
  ports:
    # 默认情况下，为了方便起见，`targetPort` 被设置为与 `port` 字段相同的值。
    - port: 8080
      targetPort: 8080
      # 在 Istio Gateway 中必须配置，并且格式为："<protocol>[-<suffix>]"
      name: http
---
# 如果不加下面的配置，跨 namespace 访问格式如下：
#  curl app2.namespace-2:8080/user/get

# 如果加了下面的配置，则：
# 实现 ns1 名称空间的pod，访问 namespace-2 名称空间的Service：app2。反过来同理
# 访问：curl app2-externalname:8080/user/get
apiVersion: v1
kind: Service
metadata:
  name: app2-externalname
  namespace: ns1
spec:
  type: ExternalName
  externalName: app2.namespace-2.svc.cluster.local
  ports:
    - name: http
      port: 8080
      targetPort: 8080





